
/*
	int counter = TIMx->CNT; //aktualna wartosc licznika powiazana z periodem
	if (TIM_GetFlagStatus(TIMx, TIM_FLAG_Update ))
	{
		//your code here
		TIM_ClearFlag(TIMx, TIM_FLAG_Update );
	}

timery:
Timery 2-5 oraz 9-14 - timery ogólnego przeznaczenia
Timery 6 i 7 - podstawowe peryferia o najprostszych funkcjach
Timery 1 i 8 - zaawansowane timery do najbardziej z³o¿onych zadañ

Maksymalna czêstotliwoœæ inkrementacji/dekrementacji timera zale¿y od tego
do której szyny APB zosta³ pod³¹czony.
W przypadku timerów: TIM1, TIM8, TIM9, TIM10 i TIM11 ftim = fcpu = 168 MHz (szyna APB2).
W przypadku timerów: TIM2 - TIM7, TIM12 - TIM14 ftim = fcpu/2 = 84 MHz (szyna APB1).

piny wolne:
PA0 - przycisk wbudowany
PD12-15 diody wbudowane
PD5 - USB LD8: red LED indicates an overcurrent from VBUS of CN5 and is connected to the I/O PD5 of the STM32F407VGT6.



if(GPIO_ReadInputDataBit(GPIOE, GPIO_Pin_x)==RESET)
{
	GPIO_SetBits(GPIOD, GPIO_Pin_x);
	//GPIO_ResetBits(GPIOD, GPIO_Pin_x);
}

void TIM3_IRQHandler ( void )
{
	if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
	{
		// miejsce na kod wywo³ywany w momencie wyst¹pienia przerwania
		TIM_ClearITPendingBit(TIM3, TIM_IT_Update);// wyzerowanie flagi wyzwolonego przerwania
	}
}

void EXTI0_IRQHandler ( void )
{
	if (EXTI_GetITStatus(EXTI_Line0) != RESET)
	{
		// miejsce na kod wywo³ywany w momencie wyst¹pienia przerwania
		// wyzerowanie flagi wyzwolonego przerwania
		EXTI_ClearITPendingBit(EXTI_Line0);
	}
}
*/

